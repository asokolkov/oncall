version: '3'

services:
  oncall-web:
    build: .
    hostname: oncall
    ports:
      - "8080:8080"
      - "8081:8081"
      - "9101:9101"
    environment:
      - DOCKER_DB_BOOTSTRAP=1
      - IRIS_API_HOST=iris
    volumes:
      - ./configs/config.docker.yaml:/home/oncall/config/config.yaml
      - node:/home/oncall/node-exporter/textfile-collector:rw
      - app-logs:/home/oncall/var/log/uwsgi
      - app-logs:/home/oncall/var/log/nginx
    networks:
      - iris
  
  oncall-mysql:
    hostname: oncall-mysql
    image: mysql:5.7
    environment:
      - MYSQL_ROOT_PASSWORD=1234
    networks:
      - iris

  prometheus:
    image: bitnami/prometheus:latest
    ports:
      - "9090:9090"
    depends_on:
      - oncall-web
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/targets.json:/etc/prometheus/targets.json
    networks:
      - iris

  node-exporter:
    image: bitnami/node-exporter:latest
    ports:
      - "9100:9100"
    depends_on:
      - prometheus
    command:
      - --no-collector.conntrack
      - --no-collector.dmi
      - --no-collector.fibrechannel
      - --no-collector.hwmon
      - --no-collector.infiniband
      - --no-collector.nfs
      - --no-collector.nfsd
      - --no-collector.nvme
      - --no-collector.pressure
      - --no-collector.rapl
      - --no-collector.tapestats
      - --no-collector.zfs
      - --collector.textfile.directory=/home/oncall/node-exporter/textfile-collector
    volumes:
      - node:/home/oncall/node-exporter/textfile-collector:rw
    networks:
      - iris

  blackbox-exporter:
    image: bitnami/blackbox-exporter:latest
    ports:
      - "9115:9115"
    depends_on:
      - prometheus
    command:
      - --config.file=/etc/blackbox_exporter/blackbox.yml
    volumes:
      - ./prometheus/blackbox.yml:/etc/blackbox_exporter/blackbox.yml
    networks:
      - iris

  kibana:
    image: kibana:8.10.2
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - iris

  elasticsearch:
    image: elasticsearch:8.10.2
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - iris

  logstash:
    image: logstash:8.10.2
    ports:
      - "5000:5000"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    volumes:
      - ./configs/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    networks:
      - iris

  filebeat:
    image: elastic/filebeat:8.10.2
    user: root
    command: -strict.perms=false
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./configs/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - app-logs:/var/app/log
    environment:
      - LOGSTASH_HOST=logstash
      - LOGSTASH_PORT=5000
    networks:
      - iris

volumes:
  node:
  app-logs:
  elasticsearch-data:
    driver: local

networks:
  iris:
